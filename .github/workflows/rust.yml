name: Continuous integration

on:
  push:
  pull_request:
  merge_group:
  schedule:
    - cron: '0 18 * * *'

env:
  check_ext_rust_version: nightly-2025-08-06
  # ^ sync with https://github.com/awslabs/cargo-check-external-types/blob/main/rust-toolchain.toml

jobs:
  pre_commit:
    timeout-minutes: 5
    name: prek
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          ref: ${{ github.head_ref }}
      - name: Cache tools
        id: cache-prek-tools
        uses: actions/cache@v4
        with:
          path: ~/.cargo/bin
          key: prek-tools
      - name: Install tools used in prek
        if: steps.cache-prek-tools.outputs.cache-hit != 'true'
        run: |
          cargo install --locked cargo-rdme
      - name: Install prek
        uses: ./.github/actions/install-prek
        id: prek
        with:
          skip-prek-hooks: false
      - name: Run prek
        run: prek --all-files --verbose --hook-stage manual

  check:
    name: Check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
          - 1.67.1
          - nightly
        features:
          - --features=default
          - --all-features
    steps:
      - uses: actions/checkout@v5
      - name: Install ${{ matrix.rust }} toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
      - name: Cargo update (fix for MSRV)
        run: cargo update -p time --precise 0.3.41
        if: matrix.rust == '1.67.1'
      - run: RUSTFLAGS="-D warnings" cargo check --locked ${{ matrix.features }}

  test_features:
    name: Test suite (with features)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        features:
          - --features=default
          - --all-features
          - --features=bigint,serialize,debug
          - --features=bigint,serialize,trace
          - --no-default-features
    steps:
      - uses: actions/checkout@v5
      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
      - run: cargo test --locked ${{ matrix.features }}

  no_std:
    name: no-std
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
      - run: RUSTFLAGS="-D warnings" cargo check --locked --no-default-features

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Install stable rustfmt
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - run: cargo fmt --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Install nightly clippy
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: clippy
      - run: cargo clippy -- -D warnings

  readme:
    name: Check if README is up to date
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
      - run: |
          cargo install cargo-rdme
          cargo rdme --check

  doc:
    name: Build documentation
    runs-on: ubuntu-latest
    env:
      RUSTDOCFLAGS: --cfg docsrs
    steps:
      - uses: actions/checkout@v5
      - name: Install nightly rust
        uses: dtolnay/rust-toolchain@nightly
      - run: cargo doc --workspace --no-deps --all-features

  semver:
    name: Check semver compatibility
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v5
      - name: Check semver
        uses: obi1kenobi/cargo-semver-checks-action@v2

  check-external-types:
    name: Validate external types appearing in public API
    runs-on: ubuntu-latest
    continue-on-error: false
    steps:
      - name: Checkout sources
        uses: actions/checkout@v5
      - name: Install rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.check_ext_rust_version }}
      - run: cargo install --locked cargo-check-external-types
      - run: cargo check-external-types
